Automatically generated BuildingsPy dump file for failed translations.

===============================
=====START OF NEW LOG FILE=====
===============================
﻿ = true

    
    rCheck = checkModel("IBPSA.Fluid.HeatExchangers.Examples.DryCoilEffectivenessNTUPControl");
Check of IBPSA.Fluid.HeatExchangers.Examples.DryCoilEffectivenessNTUPControl:
The model has the same number of unknowns and equations: 250
The model has the same number of unknowns and equations:
  246+2*val.order
Check of IBPSA.Fluid.HeatExchangers.Examples.DryCoilEffectivenessNTUPControl successful.
    
    Modelica.Utilities.Streams.print("    { \"file\" :  \"IBPSA/Resources/Scripts/Dymola/Fluid/HeatExchangers/Examples/DryCoilEffectivenessNTUPControl.mos\",", "statistics.json");
    Modelica.Utilities.Streams.print("      \"model\" : \"IBPSA.Fluid.HeatExchangers.Examples.DryCoilEffectivenessNTUPControl\",", "statistics.json");
    Modelica.Utilities.Streams.print("      \"check\" : {", "statistics.json");
    Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"IBPSA.Fluid.HeatExchangers.Examples.DryCoilEffectivenessNTUPControl\\\");\",", "statistics.json");
    Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "statistics.json");
    Modelica.Utilities.Streams.print("      },", "statistics.json");
    
    
    rScript=RunScript("Resources/Scripts/Dymola/Fluid/HeatExchangers/Examples/DryCoilEffectivenessNTUPControl.mos");
simulateModel("IBPSA.Fluid.HeatExchangers.Examples.DryCoilEffectivenessNTUPControl", stopTime=3600, method="CVode", tolerance=1e-6, resultFile="DryCoilEffectivenessNTUPControl");
Translation of IBPSA.Fluid.HeatExchangers.Examples.DryCoilEffectivenessNTUPControl:
The DAE has 250 scalar unknowns and 250 scalar equations.
Error: The initialization problem is overspecified for variables of element type Real.
The initial equation 
  293.15 = 293.15;
 refers to variables, which all are known.
To correct it you can remove this equation
 
Statistics
 
Original Model
  Number of components: 47
  Variables: 666
  Constants: 33 (35 scalars)
  Parameters: 341 (337 scalars)
  Unknowns: 292 (262 scalars)
  Differentiated variables: 4 scalars
  Equations: 284
  Nontrivial: 257
Translated Model
  Constants: 290 scalars
  Free parameters: 64 scalars
  Parameter depending: 93 scalars
  Continuous time states: 4 scalars
  Time-varying variables: 47 scalars
  Alias variables: 140 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: {1}
  Sizes after manipulation of the nonlinear systems: {0}
  Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
  P.I.y
  temSen.T
  val.filter.x[1]
  val.filter.x[2]
 
Error detected when generating code.
Translation aborted.
Error: ERRORS have been issued.
 = false

    
    savelog("IBPSA.Fluid.HeatExchangers.Examples.DryCoilEffectivenessNTUPControl.translation.log");


===============================
=====START OF NEW LOG FILE=====
===============================
﻿ = true

    
    rCheck = checkModel("IBPSA.Fluid.HeatExchangers.Examples.DryCoilEffectivenessNTUMassFlow");
Error: else (line 113, column 3: /tmp/tmp-IBPSA-1-ccd9t8rc/IBPSA/Fluid/HeatExchangers/BaseClasses/PartialEffectivenessNTU.mo)
Error: Expected one of:
=
:=
";"
"annotation"
string-literal
 
Check of IBPSA.Fluid.HeatExchangers.Examples.DryCoilEffectivenessNTUMassFlow:
The model has the same number of unknowns and equations: 229
Check of IBPSA.Fluid.HeatExchangers.Examples.DryCoilEffectivenessNTUMassFlow successful.
Declaring variable: Boolean rCheck ;
    
    Modelica.Utilities.Streams.print("    { \"file\" :  \"IBPSA/Resources/Scripts/Dymola/Fluid/HeatExchangers/Examples/DryCoilEffectivenessNTUMassFlow.mos\",", "statistics.json");
    Modelica.Utilities.Streams.print("      \"model\" : \"IBPSA.Fluid.HeatExchangers.Examples.DryCoilEffectivenessNTUMassFlow\",", "statistics.json");
    Modelica.Utilities.Streams.print("      \"check\" : {", "statistics.json");
    Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"IBPSA.Fluid.HeatExchangers.Examples.DryCoilEffectivenessNTUMassFlow\\\");\",", "statistics.json");
    Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "statistics.json");
    Modelica.Utilities.Streams.print("      },", "statistics.json");
    
    
    rScript=RunScript("Resources/Scripts/Dymola/Fluid/HeatExchangers/Examples/DryCoilEffectivenessNTUMassFlow.mos");
simulateModel("IBPSA.Fluid.HeatExchangers.Examples.DryCoilEffectivenessNTUMassFlow", method="CVode", tolerance=1e-6, stopTime=3600, resultFile="DryCoilEffectivenessNTUMassFlow");
Translation of IBPSA.Fluid.HeatExchangers.Examples.DryCoilEffectivenessNTUMassFlow:
The DAE has 229 scalar unknowns and 229 scalar equations.
Error: The initialization problem is overspecified for variables of element type Real.
The initial equation 
  303.15 = 293.15;
 refers to variables, which all are known.
To correct it you can remove this equation
 
Statistics
 
Original Model
  Number of components: 39
  Variables: 542
  Constants: 28 (31 scalars)
  Parameters: 246 (262 scalars)
  Unknowns: 268 (241 scalars)
  Differentiated variables: 1 scalars
  Equations: 237
  Nontrivial: 209
Translated Model
  Constants: 254 scalars
  Free parameters: 47 scalars
  Parameter depending: 45 scalars
  Continuous time states: 1 scalars
  Time-varying variables: 66 scalars
  Alias variables: 122 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: { }
  Sizes after manipulation of the nonlinear systems: { }
  Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
  senRelHum.phi
 
Error detected when generating code.
Translation aborted.
Error: ERRORS have been issued.
 = false

Declaring variable: Boolean rScript ;
    
    savelog("IBPSA.Fluid.HeatExchangers.Examples.DryCoilEffectivenessNTUMassFlow.translation.log");


