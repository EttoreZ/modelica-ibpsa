# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

#      TEST_ARG: "make test-documentation test-experiment-setup test-autogenerated-files test-verify-files"

# Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:

defaults:
  run:
    shell: bash
    working-directory: IBPSA

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  simulate:
    services:
      jmodelica:
        image: michaelwetter/ubuntu-1804_jmodelica_trunk

    runs-on: ubuntu-18.04

#    strategy:
#      matrix:
#        arg: [ele1, ele2]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
##
##      - uses: actions/setup-python@v2
##        with:
##          python-version: '3.6' # Version range or exact version of a Python version to use, using SemVer's version range syntax
##          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
##
##      - name: "Install pip"
##        run: pip3 install --upgrade pip setuptools wheel
##
##      - name: "Install numpy"
##        run: pip3 install --only-binary=numpy,scipy,matplotlib numpy==1.13.3 scipy==0.19.1 matplotlib==2.1.0
##
##      - name: "Install sphinx and its dependencies"
##        run: pip3 install \
##          sphinx==2.1.2 \
##          sphinx-bootstrap-theme==0.7.1 \
##          sphinxcontrib-bibtex==0.4.2 \
##          sphinxcontrib-plantuml==0.17 \
##          alabaster==0.7.12 \
##          MarkupSafe==1.1.1 \
##          Pygments==2.4.2 \
##          snowballstemmer==1.9.0 \
##          docutils==0.15.2 \
##          Babel==2.7.0 \
##          requests==2.22.0 \
##          Jinja2==2.10.1 \
##          latexcodec==1.0.7 \
##          pybtex==0.22.2
##          pybtex-docutils==0.2.1 \
##          oset==0.1.3 \
##          PyYAML==5.1.2

##      - name: "Install BuildingsPy"
##        run: pip3 install git+https://github.com/lbl-srg/BuildingsPy@master
##
      - name: "Test for docker"
        run: which docker

      - name: "Download jmodelica"
        run: docker pull michaelwetter/ubuntu-1804_jmodelica_trunk

      - name: "Run command in docker"
        run: docker run ${{ job.services.jmodelica.id }} ls


##      - name: "Test html syntax"
##        run : ../bin/runUnitTests.py --validate-html-only
##
##      - name: "Test autogenerated documentation"
##        run : (cd Resources/src/fluid/heatpumps/calibration/doc; make regressiontest)
##
##      - name: "Test experiment setup"
##        run : ../bin/runUnitTests.py --validate-experiment-setup
##
##      - name: "Test if package.order are correct"
##        run : |
##              python -c 'import buildingspy.development.refactor as r; r.write_package_order(".", recursive=True)'
##              git diff --exit-code .
##
##      - name: "Verify files for invalid strings"
##        run: ${GITHUB_WORKSPACE}/bin/verifyFiles.py



#      - id: simulate
#        name: Simulate models
#        env:
#          ARG: ${{ matrix.arg }}
#        run: echo $ARG

#  simulate:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        arg: [ele1, ele2]
#    steps:
#      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - uses: actions/checkout@v2
#
#      - uses: actions/setup-python@v2
#        with:
#          python-version: '3.6' # Version range or exact version of a Python version to use, using SemVer's version range syntax
#          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
#
#      - name: "Install pip"
#        run: pip3 install --upgrade pip setuptools wheel
#
#      - name: "Install numpy"
#        run: pip3 install --only-binary=numpy,scipy,matplotlib numpy==1.13.3 scipy==0.19.1 matplotlib==2.1.0
#
#      - name: "Install BuildingsPy"
#        run: pip3 install git+https://github.com/lbl-srg/BuildingsPy@master
#
#      - id: simulate
#        name: Simulate models
#        env:
#          ARG: ${{ matrix.arg }}
#        run: echo $ARG
